using System;
using System.Collections.Generic;
using System.Text;
using SharpSqlBuilder.Maps;
using SharpSqlBuilder.Operands;
using SharpSqlBuilder.Operators;

namespace SharpSqlBuilder.Builders
{
    public class SqlUpdateBuilderHelper<TBuilder> : SqlUpdateBuilderBase where TBuilder : SqlUpdateBuilderBase
    {
        public SqlUpdateBuilderHelper(SqlTable sqlTable) : base(sqlTable)
        {
        }
        public new TBuilder CustomSql(string customSql, SqlUpdatePosition? type = null) => (TBuilder)base.CustomSql(customSql, type);
        protected new TBuilder Values(IEnumerable<KeyValuePair<SqlColumn, Operand>> implicitSets) => (TBuilder)base.Values(implicitSets);
        protected new TBuilder Values(IEnumerable<SqlColumn> sqlColumns) => (TBuilder)base.Values(sqlColumns);
        public new TBuilder AllUpdatableValues() => (TBuilder)base.AllUpdatableValues();
        protected new TBuilder Where(params Operator[] operators) => (TBuilder)base.Where(operators);
        public new TBuilder WhereKeysEquals() => (TBuilder)base.WhereKeysEquals();
        public new TBuilder ReturnsAutoGeneratedKeys() => (TBuilder)base.ReturnsAutoGeneratedKeys();
        public new TBuilder ReturnsAllValues() => (TBuilder)base.ReturnsAllValues();
        protected new TBuilder Returns(IEnumerable<SqlColumn> sqlColumns) => (TBuilder)base.Returns(sqlColumns);
    }
}
